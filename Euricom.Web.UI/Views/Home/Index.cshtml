@using Euricom.Web.UI.Models

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_master.cshtml";
}

<div id="timesheetGrid" style="display: none;" data-bind="visible: showTimesheets">
    <div class="btn-toolbar">
        <div class="btn-group">
            <span class="btn btn-primary">Actions</span>
            <a class="btn btn-primary dropdown-toggle" data-toggle="dropdown" href="">
                <span class="caret"></span>
            </a>
            <ul class="dropdown-menu">
                <li><a href="#" id="selectAll" data-bind="click: selectAll">Select All</a></li>
                <li><a href="#" id="deselectAll" data-bind="click: deselectAll">Select None</a></li>
                <li class="divider"></li>
                <li><a href="#" id="delete" data-bind="click: showDeletionWarning">Delete</a></li>
            </ul>
        </div>
    </div>
    <table id="timesheets" class="table table-striped table-hover table-condensed">   
        <thead>
            <tr>
                <th></th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Month</th>
                <th>Year</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody data-bind="foreach: data.timesheets">
            <tr data-bind="attr: { 'data-row-id': id }">
                <td><input type="checkbox" data-bind="value: id"/></td>
                <td data-bind="text: firstname"></td>
                <td data-bind="text: lastname"></td>
                <td data-bind="text: month"></td>
                <td data-bind="text: year"></td>
                <td><a href="#" class="edit" data-bind="attr: { 'data-id': id }, click: edit">Edit</a></td>
            </tr>
        </tbody>
    </table>
</div>

<span class="message-loading" data-bind="visible: loading">Loading...</span>
<span id="no-timesheets" data-bind="visible: !showTimesheets() && !loading()">No timesheets found.</span>

<div class="modal hide fade" id="timesheet-modal">
    @{ Html.RenderPartial("_Timesheet", new Timesheet());}
</div>

<div class="modal hide fade" id="timesheet-delete">
	<div class="modal-header">
		<button type="button" class="close" data-dismiss="modal">×</button>
		<h3>Delete?</h3>
	</div>
    <div class="modal-body">
      <p>Are you sure you want to delete these timesheets?</p>
    </div>

	<div class="modal-footer">
		<a href="#" class="btn" data-dismiss="modal">Cancel</a>
		<input type="submit" class="btn btn-danger" value="Delete" data-bind="click: deleteTimesheets" />
	</div>
</div>

<div class="pull-right">
    <a id="new-timesheet" class="btn btn-success" data-toggle="modal" href="#timesheet-modal" data-bind="click: resetForm">Add timesheet</a>
</div>

<script type="text/javascript">
    var model;
    
    $(function () {
        model = new viewModel();
        ko.applyBindings(model);
        model.loadTimesheets();
    });

    var dataRow = function (timesheet) {
        this.id = ko.observable(timesheet.id);
        this.firstname = ko.observable(timesheet.firstname);
        this.lastname = ko.observable(timesheet.lastname);
        this.month = ko.observable(timesheet.month);
        this.year = ko.observable(timesheet.year);

        this.update = function (timesheet) {
            this.id(timesheet.id);
            this.firstname(timesheet.firstname);
            this.lastname(timesheet.lastname);
            this.month(timesheet.month);
            this.year(timesheet.year);
        };

        this.edit = function () {
            var id = this.id();

            $.getJSON(
                '@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "timesheets" })',
                { id: id },
                function (data) {
                    var form = $('#Timesheet');
                    $('<input>').attr('type', 'hidden').attr('id', 'id').attr('name', 'id').val(data.id).prependTo(form);
                    form.find('#FirstName').val(data.firstname);
                    form.find('#LastName').val(data.lastname);
                    form.find('#Month').val(data.month);
                    form.find('#Year').val(data.year);
                }
            );

            $('#timesheet-modal').modal('show');
        };
    };

    var data = function () {
        this.timesheets = ko.observableArray();
    };

    viewModel = function () {
        this.data = new data();

        this.showTimesheets = ko.observable(false);

        this.loading = ko.observable(false);

        this.loadTimesheets = function () {
            this.loading(true);
            var self = this;
            $.getJSON(
                '@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "timesheets" })',
                function (timesheets) {
                    self.data.timesheets.removeAll();
                    $.each(timesheets, function (index, timesheet) {
                        self.data.timesheets.push(new dataRow(timesheet));
                    });
                    self.showTimesheets(self.data.timesheets().length > 0);
                    self.loading(false);
                }
            );
        };

        this.postTimesheet = function (form) {
            form = $(form);
            if (!form.valid())
                return false;

            var json = JSON.stringify(this._getTimesheetFromFrom(form));

            var update = form.find("input[type='hidden'][id='id']").val();
            var httpVerb = !update ? "POST" : "PUT";

            var self = this;

            $.ajax({
                url: '@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "timesheets" })',
                type: httpVerb,
                data: json,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (timesheet) {
                    if (update) {
                        form.find("input[type='hidden'][id='id']").remove();
                        var match = ko.utils.arrayFirst(model.data.timesheets(), function (item) {
                            return timesheet.id === item.id();
                        });
                        match.update(timesheet);
                    }
                    else {
                        model.data.timesheets.push(new dataRow(timesheet));
                        self.showTimesheets(self.data.timesheets().length > 0);
                    }
                    $('#timesheet-modal').modal('hide');
                },
                error: function () {
                    console.log('error');
                }
            });
        };

        this.selectAll = function () {
            $("#timesheets input[type=checkbox]").attr('checked', 'checked');
        };

        this.deselectAll = function () {
            $("#timesheets input[type=checkbox]").removeAttr('checked');
        };

        this.showDeletionWarning = function () {
            var checkboxes = $("#timesheets").find(":checkbox:checked:not([readonly])");
            var ids = new Array();
            $.each(checkboxes, function (index, checkbox) {
                ids.push($(checkbox).val());
            });

            if (ids.length == 0)
                return;

            $('#timesheet-delete').data('ids', ids).modal('show');
        };

        this.deleteTimesheets = function () {
            var ids = $('#timesheet-delete').data('ids');
            $('#timesheet-delete').modal('hide');

            var self = this;

            $.ajax({
                url: '@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "timesheets" })',
                type: 'DELETE',
                data: JSON.stringify(ids),
                contentType: 'application/json; charset=utf-8',
                success: function () {
                    $.each(ids, function (index, id) {
                        var match = ko.utils.arrayFirst(self.data.timesheets(), function (item) {
                            return id === item.id;
                        });
                        var indexOf = self.data.timesheets.indexOf(match);
                        self.data.timesheets.splice(indexOf, 1);
                    });
                    self.showTimesheets(self.data.timesheets().length > 0);
                },
                error: function () {
                    alert('error');
                }
            });
        };

        this.resetForm = function () {
            var form = $('#Timesheet');
            form.validate().resetForm();
            form.get(0).reset();
        };

        this._getTimesheetFromFrom = function (form) {
            if (form.length === 0)
                return null;

            form = $(form);
            var timesheet = {};
            form.find('input[type!=submit],select').each(function () {
                timesheet[this.name] = $(this).val();
            });

            return timesheet;
        };
    };

</script>